define(["require", "exports"], function (require, exports) {
    'use strict';
    (function (Context) {
        Context[Context["Web"] = 0] = "Web";
        Context[Context["Windows"] = 1] = "Windows";
        Context[Context["Cordova"] = 2] = "Cordova";
    })(exports.Context || (exports.Context = {}));
    var Context = exports.Context;
    (function (Regions) {
        Regions[Regions["Arabia"] = 0] = "Arabia";
        Regions[Regions["Bulgaria"] = 1] = "Bulgaria";
        Regions[Regions["CzechRepublic"] = 2] = "CzechRepublic";
        Regions[Regions["Denmark"] = 3] = "Denmark";
        Regions[Regions["Austria"] = 4] = "Austria";
        Regions[Regions["Switzerland"] = 5] = "Switzerland";
        Regions[Regions["Germany"] = 6] = "Germany";
        Regions[Regions["Greece"] = 7] = "Greece";
        Regions[Regions["Australia"] = 8] = "Australia";
        Regions[Regions["CanadaEN"] = 9] = "CanadaEN";
        Regions[Regions["UnitedKingdom"] = 10] = "UnitedKingdom";
        Regions[Regions["Indonesia"] = 11] = "Indonesia";
        Regions[Regions["Ireland"] = 12] = "Ireland";
        Regions[Regions["India"] = 13] = "India";
        Regions[Regions["Malaysia"] = 14] = "Malaysia";
        Regions[Regions["NewZealand"] = 15] = "NewZealand";
        Regions[Regions["Philippines"] = 16] = "Philippines";
        Regions[Regions["Singapore"] = 17] = "Singapore";
        Regions[Regions["UnitedStatesEN"] = 18] = "UnitedStatesEN";
        Regions[Regions["ArabiaEN"] = 19] = "ArabiaEN";
        Regions[Regions["SouthAfrica"] = 20] = "SouthAfrica";
        Regions[Regions["Argentina"] = 21] = "Argentina";
        Regions[Regions["Chile"] = 22] = "Chile";
        Regions[Regions["Spain"] = 23] = "Spain";
        Regions[Regions["Mexico"] = 24] = "Mexico";
        Regions[Regions["UnitedStates"] = 25] = "UnitedStates";
        Regions[Regions["LatinAmerica"] = 26] = "LatinAmerica";
        Regions[Regions["Estonia"] = 27] = "Estonia";
        Regions[Regions["Finland"] = 28] = "Finland";
        Regions[Regions["BelgiumFR"] = 29] = "BelgiumFR";
        Regions[Regions["Canada"] = 30] = "Canada";
        Regions[Regions["SwitzerlandEN"] = 31] = "SwitzerlandEN";
        Regions[Regions["France"] = 32] = "France";
        Regions[Regions["Israel"] = 33] = "Israel";
        Regions[Regions["Croatia"] = 34] = "Croatia";
        Regions[Regions["Hungary"] = 35] = "Hungary";
        Regions[Regions["Italy"] = 36] = "Italy";
        Regions[Regions["Japan"] = 37] = "Japan";
        Regions[Regions["Korea"] = 38] = "Korea";
        Regions[Regions["Lithuania"] = 39] = "Lithuania";
        Regions[Regions["Latvia"] = 40] = "Latvia";
        Regions[Regions["Norway"] = 41] = "Norway";
        Regions[Regions["Belgium"] = 42] = "Belgium";
        Regions[Regions["Netherlands"] = 43] = "Netherlands";
        Regions[Regions["Poland"] = 44] = "Poland";
        Regions[Regions["Brazil"] = 45] = "Brazil";
        Regions[Regions["Portugal"] = 46] = "Portugal";
        Regions[Regions["Romania"] = 47] = "Romania";
        Regions[Regions["Russia"] = 48] = "Russia";
        Regions[Regions["SlovakRepublic"] = 49] = "SlovakRepublic";
        Regions[Regions["Slovenia"] = 50] = "Slovenia";
        Regions[Regions["Sweden"] = 51] = "Sweden";
        Regions[Regions["Thailand"] = 52] = "Thailand";
        Regions[Regions["Turkey"] = 53] = "Turkey";
        Regions[Regions["Ukraine"] = 54] = "Ukraine";
        Regions[Regions["China"] = 55] = "China";
        Regions[Regions["HongKong"] = 56] = "HongKong";
        Regions[Regions["Taiwan"] = 57] = "Taiwan";
    })(exports.Regions || (exports.Regions = {}));
    var Regions = exports.Regions;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb3JlL2VudW1lcmF0aW9ucy50cyJdLCJuYW1lcyI6WyJDb250ZXh0IiwiUmVnaW9ucyJdLCJtYXBwaW5ncyI6IjtJQUFBLFlBQVksQ0FBQztJQUViLFdBQVksT0FBTztRQUNmQSxtQ0FBR0EsQ0FBQUE7UUFDSEEsMkNBQU9BLENBQUFBO1FBQ1BBLDJDQUFPQSxDQUFBQTtJQUNYQSxDQUFDQSxFQUpXLGVBQU8sS0FBUCxlQUFPLFFBSWxCO0lBSkQsSUFBWSxPQUFPLEdBQVAsZUFJWCxDQUFBO0lBRUQsV0FBWSxPQUFPO1FBQ2ZDLHlDQUFNQSxDQUFBQTtRQUNOQSw2Q0FBUUEsQ0FBQUE7UUFDUkEsdURBQWFBLENBQUFBO1FBQ2JBLDJDQUFPQSxDQUFBQTtRQUNQQSwyQ0FBT0EsQ0FBQUE7UUFDUEEsbURBQVdBLENBQUFBO1FBQ1hBLDJDQUFPQSxDQUFBQTtRQUNQQSx5Q0FBTUEsQ0FBQUE7UUFDTkEsK0NBQVNBLENBQUFBO1FBQ1RBLDZDQUFRQSxDQUFBQTtRQUNSQSx3REFBYUEsQ0FBQUE7UUFDYkEsZ0RBQVNBLENBQUFBO1FBQ1RBLDRDQUFPQSxDQUFBQTtRQUNQQSx3Q0FBS0EsQ0FBQUE7UUFDTEEsOENBQVFBLENBQUFBO1FBQ1JBLGtEQUFVQSxDQUFBQTtRQUNWQSxvREFBV0EsQ0FBQUE7UUFDWEEsZ0RBQVNBLENBQUFBO1FBQ1RBLDBEQUFjQSxDQUFBQTtRQUNkQSw4Q0FBUUEsQ0FBQUE7UUFDUkEsb0RBQVdBLENBQUFBO1FBQ1hBLGdEQUFTQSxDQUFBQTtRQUNUQSx3Q0FBS0EsQ0FBQUE7UUFDTEEsd0NBQUtBLENBQUFBO1FBQ0xBLDBDQUFNQSxDQUFBQTtRQUNOQSxzREFBWUEsQ0FBQUE7UUFDWkEsc0RBQVlBLENBQUFBO1FBQ1pBLDRDQUFPQSxDQUFBQTtRQUNQQSw0Q0FBT0EsQ0FBQUE7UUFDUEEsZ0RBQVNBLENBQUFBO1FBQ1RBLDBDQUFNQSxDQUFBQTtRQUNOQSx3REFBYUEsQ0FBQUE7UUFDYkEsMENBQU1BLENBQUFBO1FBQ05BLDBDQUFNQSxDQUFBQTtRQUNOQSw0Q0FBT0EsQ0FBQUE7UUFDUEEsNENBQU9BLENBQUFBO1FBQ1BBLHdDQUFLQSxDQUFBQTtRQUNMQSx3Q0FBS0EsQ0FBQUE7UUFDTEEsd0NBQUtBLENBQUFBO1FBQ0xBLGdEQUFTQSxDQUFBQTtRQUNUQSwwQ0FBTUEsQ0FBQUE7UUFDTkEsMENBQU1BLENBQUFBO1FBQ05BLDRDQUFPQSxDQUFBQTtRQUNQQSxvREFBV0EsQ0FBQUE7UUFDWEEsMENBQU1BLENBQUFBO1FBQ05BLDBDQUFNQSxDQUFBQTtRQUNOQSw4Q0FBUUEsQ0FBQUE7UUFDUkEsNENBQU9BLENBQUFBO1FBQ1BBLDBDQUFNQSxDQUFBQTtRQUNOQSwwREFBY0EsQ0FBQUE7UUFDZEEsOENBQVFBLENBQUFBO1FBQ1JBLDBDQUFNQSxDQUFBQTtRQUNOQSw4Q0FBUUEsQ0FBQUE7UUFDUkEsMENBQU1BLENBQUFBO1FBQ05BLDRDQUFPQSxDQUFBQTtRQUNQQSx3Q0FBS0EsQ0FBQUE7UUFDTEEsOENBQVFBLENBQUFBO1FBQ1JBLDBDQUFNQSxDQUFBQTtJQUNWQSxDQUFDQSxFQTNEVyxlQUFPLEtBQVAsZUFBTyxRQTJEbEI7SUEzREQsSUFBWSxPQUFPLEdBQVAsZUEyRFgsQ0FBQSIsImZpbGUiOiJhcHAvY29yZS9lbnVtZXJhdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5leHBvcnQgZW51bSBDb250ZXh0IHtcclxuICAgIFdlYixcclxuICAgIFdpbmRvd3MsXHJcbiAgICBDb3Jkb3ZhXHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIFJlZ2lvbnMge1xyXG4gICAgQXJhYmlhLFxyXG4gICAgQnVsZ2FyaWEsXHJcbiAgICBDemVjaFJlcHVibGljLFxyXG4gICAgRGVubWFyayxcclxuICAgIEF1c3RyaWEsXHJcbiAgICBTd2l0emVybGFuZCxcclxuICAgIEdlcm1hbnksXHJcbiAgICBHcmVlY2UsXHJcbiAgICBBdXN0cmFsaWEsXHJcbiAgICBDYW5hZGFFTixcclxuICAgIFVuaXRlZEtpbmdkb20sXHJcbiAgICBJbmRvbmVzaWEsXHJcbiAgICBJcmVsYW5kLFxyXG4gICAgSW5kaWEsXHJcbiAgICBNYWxheXNpYSxcclxuICAgIE5ld1plYWxhbmQsXHJcbiAgICBQaGlsaXBwaW5lcyxcclxuICAgIFNpbmdhcG9yZSxcclxuICAgIFVuaXRlZFN0YXRlc0VOLFxyXG4gICAgQXJhYmlhRU4sXHJcbiAgICBTb3V0aEFmcmljYSxcclxuICAgIEFyZ2VudGluYSxcclxuICAgIENoaWxlLFxyXG4gICAgU3BhaW4sXHJcbiAgICBNZXhpY28sXHJcbiAgICBVbml0ZWRTdGF0ZXMsXHJcbiAgICBMYXRpbkFtZXJpY2EsXHJcbiAgICBFc3RvbmlhLFxyXG4gICAgRmlubGFuZCxcclxuICAgIEJlbGdpdW1GUixcclxuICAgIENhbmFkYSxcclxuICAgIFN3aXR6ZXJsYW5kRU4sXHJcbiAgICBGcmFuY2UsXHJcbiAgICBJc3JhZWwsXHJcbiAgICBDcm9hdGlhLFxyXG4gICAgSHVuZ2FyeSxcclxuICAgIEl0YWx5LFxyXG4gICAgSmFwYW4sXHJcbiAgICBLb3JlYSxcclxuICAgIExpdGh1YW5pYSxcclxuICAgIExhdHZpYSxcclxuICAgIE5vcndheSxcclxuICAgIEJlbGdpdW0sXHJcbiAgICBOZXRoZXJsYW5kcyxcclxuICAgIFBvbGFuZCxcclxuICAgIEJyYXppbCxcclxuICAgIFBvcnR1Z2FsLFxyXG4gICAgUm9tYW5pYSxcclxuICAgIFJ1c3NpYSxcclxuICAgIFNsb3Zha1JlcHVibGljLFxyXG4gICAgU2xvdmVuaWEsXHJcbiAgICBTd2VkZW4sXHJcbiAgICBUaGFpbGFuZCxcclxuICAgIFR1cmtleSxcclxuICAgIFVrcmFpbmUsXHJcbiAgICBDaGluYSxcclxuICAgIEhvbmdLb25nLFxyXG4gICAgVGFpd2FuXHJcbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
